{"version":3,"sources":["fBase.js","components/AuthForm.jsx","routes/Auth.jsx","components/Sweet.jsx","components/SweetFactory.jsx","routes/Home.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Router.jsx","components/App.jsx","index.jsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","storageService","getStorage","authService","getAuth","dbService","getFirestore","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","alt","class","faTrash","faPencilAlt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","uid","uuid","uploadString","getDownloadURL","addDoc","collection","createAt","Date","now","creator","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","newArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","history","useHistory","newDisplayName","setNewDisplayName","getMySweets","docQuery","query","where","orderBy","getDocs","console","log","updateProfile","location","reload","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe9c5229.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const storageService = getStorage(app, process.env.REACT_APP_STORAGE_BUCKET);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\n","import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useState } from 'react';\r\nimport { authService } from 'fBase';\r\n\r\nconst inputStyle = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n        } catch (error) {\r\n            setError('이미 존재하는 이메일 입니다.');\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    required\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    required\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? 'Create Account' : 'Log In'}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? 'Sign In' : 'Create Account'}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { authService } from 'fBase';\r\nimport { signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from 'firebase/auth';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n\r\n        let provider;\r\n\r\n        if (name === 'google') {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n\r\n        await signInWithPopup(authService, provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={'#9932CC'}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import { deleteDoc, doc, updateDoc } from '@firebase/firestore';\r\nimport { deleteObject, ref } from 'firebase/storage';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Sweet = ({ sweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('삭제하시겠습니까?');\r\n\r\n        if (ok) {\r\n            await deleteDoc(doc(dbService, 'sweet', sweetObj.id));\r\n\r\n            if (sweetObj.attachmentUrl !== '') {\r\n                await deleteObject(ref(storageService, sweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewSweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService, 'sweet', sweetObj.id), { text: newSweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"sweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} value=\"Update Sweet\" className=\"container sweetEdit\">\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newSweet}\r\n                            required\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Sweet\" className=\"formBtn\" />\r\n                    </form>\r\n\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{sweetObj.text}</h4>\r\n                    {sweetObj.attachmentUrl && (\r\n                        <img src={sweetObj.attachmentUrl} alt=\"sweetImage\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div class=\"sweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sweet;\r\n","import { v4 as uuid } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\r\nimport { addDoc, collection } from '@firebase/firestore';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SweetFactory = ({ userObj }) => {\r\n    const [sweet, setSweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = '';\r\n\r\n        if (attachment !== '') {\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuid()}`);\r\n\r\n            await uploadString(attachmentRef, attachment, 'data_url');\r\n\r\n            attachmentUrl = await getDownloadURL(attachmentRef);\r\n        }\r\n\r\n        await addDoc(collection(dbService, 'sweet'), {\r\n            text: sweet,\r\n            createAt: Date.now(),\r\n            creator: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n\r\n        setSweet('');\r\n        setAttachment('');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setSweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment('');\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    value={sweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                    className=\"factoryInput__input\"\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        alt=\"selectedImage\"\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import { useState, useEffect } from 'react';\r\nimport { collection, onSnapshot } from '@firebase/firestore';\r\nimport { dbService } from 'fBase';\r\nimport Sweet from 'components/Sweet';\r\nimport SweetFactory from 'components/SweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [sweets, setSweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        onSnapshot(collection(dbService, 'sweet'), (snapshot) => {\r\n            const newArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n            setSweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <SweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {sweets.map((sweet) => (\r\n                    <Sweet\r\n                        key={sweet.id}\r\n                        sweetObj={sweet}\r\n                        isOwner={sweet.creator === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={'#9932cc'} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={'#9932cc'} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { authService, dbService } from 'fBase';\r\nimport { collection, getDocs, query, where, orderBy } from '@firebase/firestore';\r\nimport { updateProfile } from '@firebase/auth';\r\n\r\nconst Profile = ({ userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const getMySweets = async () => {\r\n        const docQuery = query(\r\n            collection(dbService, 'sweet'),\r\n            where('creator', '==', userObj.uid),\r\n            orderBy('createAt', 'asc')\r\n        );\r\n        const sweets = await getDocs(docQuery);\r\n\r\n        sweets.docs.map((doc) => {\r\n            console.log(doc.data());\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMySweets();\r\n    }, []);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await updateProfile(userObj, { displayName: newDisplayName });\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: '100%',\r\n                            margin: '0 auto',\r\n                            marginTop: 80,\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fBase';\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setIsLoggedIn(user);\r\n                setUserObj(user);\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>{init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} /> : 'initializing....'}</>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}