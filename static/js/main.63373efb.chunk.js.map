{"version":3,"sources":["fBase.js","components/AuthForm.jsx","routes/Auth.jsx","components/Sweet.jsx","components/SweetFactory.jsx","routes/Home.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Router.jsx","components/App.jsx","index.jsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","storageService","getStorage","authService","getAuth","dbService","getFirestore","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","width","height","alt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","uid","uuid","uploadString","getDownloadURL","addDoc","collection","createAt","Date","now","creator","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","newArray","docs","map","data","Navigation","to","displayName","Profile","history","useHistory","newDisplayName","setNewDisplayName","getMySweets","docQuery","query","where","orderBy","getDocs","console","log","updateProfile","location","reload","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAcMA,EAAMC,YATW,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKEM,EAAiBC,YAAWV,EAAKG,6BACjCQ,EAAcC,cACdC,EAAYC,c,OCgDVC,EA9DE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,SAACC,GACd,MAEIA,EADAC,OAAUC,EADd,EACcA,KAAMC,EADpB,EACoBA,MAEP,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAKLT,EALK,gCAMQU,YAA+BtB,EAAaM,EAAOE,GAN3D,sDAQQe,YAA2BvB,EAAaM,EAAOE,GARvD,yEAWTG,EAAS,gFAXA,0DAAH,sDAiBd,OACI,qCACI,uBAAMQ,SAAUA,EAAhB,UACI,uBACIF,KAAK,QACLO,KAAK,QACLC,YAAY,QACZP,MAAOZ,EACPQ,SAAUA,EACVY,UAAQ,IAEZ,uBACIT,KAAK,WACLO,KAAK,WACLC,YAAY,WACZP,MAAOV,EACPM,SAAUA,EACVY,UAAQ,IAEZ,uBAAOF,KAAK,SAASN,MAAON,EAAa,iBAAmB,WAE3DF,KAEL,sBAAMiB,QAzBQ,kBAAMd,GAAc,SAACe,GAAD,OAAWA,MAyB7C,SAA+BhB,EAAa,UAAY,uBCzBrDiB,EAhCF,WACT,IAAMC,EAAa,uCAAG,WAAOf,GAAP,iBAAAK,EAAA,4DAOL,YALCH,EACVF,EADAC,OAAUC,MAMVc,EAAW,IAAIC,IACC,WAATf,IACPc,EAAW,IAAIE,KAVD,SAaZC,YAAgBlC,EAAa+B,GAbjB,2CAAH,sDAgBnB,OACI,gCACI,cAAC,EAAD,IACA,gCACI,wBAAQJ,QAASG,EAAeb,KAAK,SAArC,kCAGA,wBAAQU,QAASG,EAAeb,KAAK,SAArC,yC,gBC0CDkB,EAjED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvB,EAA8BhC,oBAAS,GAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KACA,EAAgClC,mBAAS+B,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAAvB,EAAA,0DACPwB,OAAOC,QAAQ,qDADR,gCAIRC,YAAUC,YAAI7C,EAAW,QAASkC,EAASY,KAJnC,UAMiB,KAA3BZ,EAASa,cANC,gCAOJC,YAAaC,YAAIrD,EAAgBsC,EAASa,gBAPtC,2CAAH,qDAYbG,EAAgB,kBAAMb,GAAW,SAACX,GAAD,OAAWA,MAS5CT,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPgC,YAAUN,YAAI7C,EAAW,QAASkC,EAASY,IAAK,CAAER,KAAMC,IAFjD,OAGbF,GAAW,GAHE,2CAAH,sDAMd,OACI,8BACKD,EACG,qCACI,sBAAMnB,SAAUA,EAAUD,MAAM,eAAhC,SACI,uBAAOJ,SAlBV,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAEdwB,EAAYxB,IAc+BA,MAAOuB,EAAUf,UAAQ,MAExD,wBAAQC,QAASyB,EAAjB,uBAGJ,mCACI,gCACI,6BAAKhB,EAASI,OACbJ,EAASa,eACN,qBACIK,IAAKlB,EAASa,cACdM,MAAM,OACNC,OAAO,OACPC,IAAI,eAGXpB,GACG,qCACI,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAASyB,EAAjB,mC,gBCqBjBM,EA3EM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,EAA0BtD,mBAAS,IAAnC,mBAAOuD,EAAP,KAAcC,EAAd,KACA,EAAoCxD,mBAAS,IAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KAEM5C,EAAQ,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,yDACbL,EAAMM,iBACF4B,EAAgB,GAED,KAAfa,EAJS,uBAKHE,EAAgBb,YAAIrD,EAAD,UAAoB6D,EAAQM,IAA5B,YAAmCC,gBALnD,SAOHC,YAAaH,EAAeF,EAAY,YAPrC,uBASaM,YAAeJ,GAT5B,OASTf,EATS,+BAYPoB,YAAOC,YAAWpE,EAAW,SAAU,CACzCsC,KAAMoB,EACNW,SAAUC,KAAKC,MACfC,QAASf,EAAQM,IACjBhB,kBAhBS,QAmBbY,EAAS,IACTE,EAAc,IApBD,4CAAH,sDAkDd,OACI,uBAAM5C,SAAUA,EAAhB,UACI,uBACID,MAAO0C,EACP9C,SA/BK,SAACC,GACdA,EAAMM,iBACN,IACcH,EACVH,EADAC,OAAUE,MAEd2C,EAAS3C,IA2BDM,KAAK,OACLC,YAAY,uBACZkD,UAAW,MAEf,uBAAOnD,KAAK,OAAOoD,OAAO,UAAU9D,SA5BvB,SAACC,GAClB,IAGM8D,EADF9D,EADAC,OAAU8D,MAEQ,GAChBC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,SAACC,GAChB,IACqBC,EACjBD,EADAE,cAAiBD,OAErBpB,EAAcoB,IAGlBJ,EAAOM,cAAcR,MAejB,uBAAOrD,KAAK,SAASN,MAAM,UAC1B4C,GACG,gCACI,qBAAKR,IAAKQ,EAAYP,MAAM,OAAOC,OAAO,OAAOC,IAAI,kBACrD,wBAAQ9B,QAhBE,kBAAMoC,EAAc,KAgB9B,0BC1CLuB,EA1BF,SAAC,GAAiB,IAAf3B,EAAc,EAAdA,QACZ,EAA4BtD,mBAAS,IAArC,mBAAOkF,EAAP,KAAeC,EAAf,KASA,OAPAC,qBAAU,WACNC,YAAWpB,YAAWpE,EAAW,UAAU,SAACyF,GACxC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAAC/C,GAAD,oBAAYC,GAAID,EAAIC,IAAOD,EAAIgD,WAClEP,EAAUI,QAEf,IAGC,qCACI,cAAC,EAAD,CAAcjC,QAASA,IACvB,8BACK4B,EAAOO,KAAI,SAAClC,GAAD,OACR,cAAC,EAAD,CAEIxB,SAAUwB,EACVvB,QAASuB,EAAMc,UAAYf,EAAQM,KAF9BL,EAAMZ,aCLpBgD,EAfI,SAAC,GAAiB,IAAfrC,EAAc,EAAdA,QAClB,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMsC,GAAG,IAAT,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBtC,EAAQuC,YAA7B,+B,QCsDLC,EA1DC,SAAC,GAAiB,IAAfxC,EAAc,EAAdA,QACTyC,EAAUC,cAChB,EAA4ChG,mBAASsD,EAAQuC,aAA7D,mBAAOI,EAAP,KAAuBC,EAAvB,KAeMC,EAAW,uCAAG,4BAAApF,EAAA,6DACVqF,EAAWC,YACbpC,YAAWpE,EAAW,SACtByG,YAAM,UAAW,KAAMhD,EAAQM,KAC/B2C,YAAQ,WAAY,QAJR,SAMKC,YAAQJ,GANb,cAQTZ,KAAKC,KAAI,SAAC/C,GACb+D,QAAQC,IAAIhE,EAAIgD,WATJ,2CAAH,qDAajBN,qBAAU,WACNe,MACD,IAEH,IAAMrF,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFsC,EAAQuC,cAAgBI,EAFf,gCAGHU,YAAcrD,EAAS,CAAEuC,YAAaI,IAHnC,OAIT1D,OAAOqE,SAASC,SAJP,2CAAH,sDAQd,OACI,qCACI,uBAAM/F,SAAUA,EAAhB,UACI,uBACIK,KAAK,OACLC,YAAY,eACZX,SAvCC,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAGdqF,EAAkBrF,IAmCNA,MAAOoF,IAEX,uBAAO9E,KAAK,SAASN,MAAM,sBAE/B,wBAAQS,QAjDM,WAClB3B,EAAYmH,UACZf,EAAQgB,KAAK,MA+CT,yBC5BGC,EAzBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAY3D,EAAc,EAAdA,QAC7B,OACI,eAAC,IAAD,WACK2D,GAAc,cAAC,EAAD,CAAY3D,QAASA,IACpC,cAAC,IAAD,UACK2D,EACG,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM7D,QAASA,MAEnB,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAAS7D,QAASA,SAI1B,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCKTC,MAvBf,WACI,MAAwBpH,oBAAS,GAAjC,mBAAOqH,EAAP,KAAaC,EAAb,KACA,EAAoCtH,oBAAS,GAA7C,mBAAOiH,EAAP,KAAmBM,EAAnB,KACA,EAA8BvH,mBAAS,MAAvC,mBAAOsD,EAAP,KAAgBkE,EAAhB,KAeA,OAbApC,qBAAU,WACNzF,EAAY8H,oBAAmB,SAACC,GACxBA,GACAH,EAAcG,GACdF,EAAWE,IAEXH,GAAc,GAGlBD,GAAQ,QAEb,IAGC,mCAAGD,EAAO,cAAC,EAAD,CAAWJ,WAAYA,EAAY3D,QAASA,IAAc,sBCnB5EqE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAGJC,SAASC,eAAe,W","file":"static/js/main.63373efb.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const storageService = getStorage(app, process.env.REACT_APP_STORAGE_BUCKET);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\n","import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useState } from 'react';\r\nimport { authService } from 'fBase';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n        } catch (error) {\r\n            setError('이미 존재하는 이메일 입니다.');\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n                <input type=\"submit\" value={newAccount ? 'Create Account' : 'Log In'} />\r\n\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? 'Sign In' : 'Create Account'}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { authService } from 'fBase';\r\nimport { signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from 'firebase/auth';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n\r\n        let provider;\r\n\r\n        if (name === 'google') {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n\r\n        await signInWithPopup(authService, provider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import { deleteDoc, doc, updateDoc } from '@firebase/firestore';\r\nimport { deleteObject, ref } from 'firebase/storage';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { useState } from 'react';\r\n\r\nconst Sweet = ({ sweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('삭제하시겠습니까?');\r\n\r\n        if (ok) {\r\n            await deleteDoc(doc(dbService, 'sweet', sweetObj.id));\r\n\r\n            if (sweetObj.attachmentUrl !== '') {\r\n                await deleteObject(ref(storageService, sweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewSweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService, 'sweet', sweetObj.id), { text: newSweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} value=\"Update Sweet\">\r\n                        <input onChange={onChange} value={newSweet} required />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <h4>{sweetObj.text}</h4>\r\n                        {sweetObj.attachmentUrl && (\r\n                            <img\r\n                                src={sweetObj.attachmentUrl}\r\n                                width=\"50px\"\r\n                                height=\"50px\"\r\n                                alt=\"sweetImage\"\r\n                            />\r\n                        )}\r\n                        {isOwner && (\r\n                            <>\r\n                                <button onClick={onDeleteClick}>Delete Sweet</button>\r\n                                <button onClick={toggleEditing}>Edit Sweet</button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sweet;\r\n","import { v4 as uuid } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\r\nimport { addDoc, collection } from '@firebase/firestore';\r\n\r\nconst SweetFactory = ({ userObj }) => {\r\n    const [sweet, setSweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = '';\r\n\r\n        if (attachment !== '') {\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuid()}`);\r\n\r\n            await uploadString(attachmentRef, attachment, 'data_url');\r\n\r\n            attachmentUrl = await getDownloadURL(attachmentRef);\r\n        }\r\n\r\n        await addDoc(collection(dbService, 'sweet'), {\r\n            text: sweet,\r\n            createAt: Date.now(),\r\n            creator: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n\r\n        setSweet('');\r\n        setAttachment('');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setSweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment('');\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={sweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Sweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" alt=\"selectedImage\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import { useState, useEffect } from 'react';\r\nimport { collection, onSnapshot } from '@firebase/firestore';\r\nimport { dbService } from 'fBase';\r\nimport Sweet from 'components/Sweet';\r\nimport SweetFactory from 'components/SweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [sweets, setSweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        onSnapshot(collection(dbService, 'sweet'), (snapshot) => {\r\n            const newArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n            setSweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <SweetFactory userObj={userObj} />\r\n            <div>\r\n                {sweets.map((sweet) => (\r\n                    <Sweet\r\n                        key={sweet.id}\r\n                        sweetObj={sweet}\r\n                        isOwner={sweet.creator === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 My Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { authService, dbService } from 'fBase';\r\nimport { collection, getDocs, query, where, orderBy } from '@firebase/firestore';\r\nimport { updateProfile } from '@firebase/auth';\r\n\r\nconst Profile = ({ userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const getMySweets = async () => {\r\n        const docQuery = query(\r\n            collection(dbService, 'sweet'),\r\n            where('creator', '==', userObj.uid),\r\n            orderBy('createAt', 'asc')\r\n        );\r\n        const sweets = await getDocs(docQuery);\r\n\r\n        sweets.docs.map((doc) => {\r\n            console.log(doc.data());\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMySweets();\r\n    }, []);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await updateProfile(userObj, { displayName: newDisplayName });\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n                {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fBase';\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setIsLoggedIn(user);\r\n                setUserObj(user);\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>{init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} /> : 'initializing....'}</>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}